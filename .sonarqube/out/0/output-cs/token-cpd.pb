ƒ
@D:\Customer\CustomerManagement\Controllers\Customercontroller.cs
	namespace 	
Customer
 
. 
Data 
{ 
[ 
ApiController 
] 
[ 
Route 

(
 
$str 
) 
] 
public		 

class		 
CustomerController		 #
:		$ %
ControllerBase		& 4
{

 
private 
readonly 
ApiDbContext %
_context& .
;. /
private 
int 
id 
; 
public 
CustomerController !
(! "
ApiDbContext" .
context/ 6
)6 7
{ 	
_context 
= 
context 
; 
} 	
[ 	
HttpGet	 
] 
[ 	
Route	 
( 
$str 
) 
] 
public	 
ActionResult 
< 
IEnumerable (
<( )
Customer) 1
>1 2
>2 3
Get3 6
(7 8
)8 9
{	 

return 
_context 
. 
	Customers %
.% &
ToList& ,
(, -
)- .
;. /
}	 

}VV 
}WW ™
3D:\Customer\CustomerManagement\Data\ApiDbContext.cs
	namespace 	
Customer
 
. 
Data 
{ 
public 
class 
ApiDbContext  
:! "
	DbContext" +
{ 
public	 
ApiDbContext 
( 
DbContextOptions -
<- .
ApiDbContext. :
>: ;
options< C
)C D
:E F
baseG K
(K L
optionsL S
)S T
{			 

}	 

public 
DbSet 
< 
Customer 
> 
	Customers %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
} 
} æ
AD:\Customer\CustomerManagement\Migrations\20231226061924_check.cs
	namespace 	
TrainerManagement
 
. 

Migrations &
{ 
public		 

partial		 
class		 
check		 
:		  
	Migration		! *
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
AlterDatabase *
(* +
)+ ,
. 

Annotation 
( 
$str +
,+ ,
$str- 6
)6 7
;7 8
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns 
: 
table 
=> !
new" %
{ 

CustomerId 
=  
table! &
.& '
Column' -
<- .
int. 1
>1 2
(2 3
name3 7
:7 8
$str9 F
,F G
typeH L
:L M
$strN S
,S T
nullableU ]
:] ^
false_ d
)d e
. 

Annotation #
(# $
$str$ C
,C D(
MySqlValueGenerationStrategyE a
.a b
IdentityColumnb p
)p q
,q r
CustomerName  
=! "
table# (
.( )
Column) /
</ 0
string0 6
>6 7
(7 8
name8 <
:< =
$str> M
,M N
typeO S
:S T
$strU _
,_ `
nullablea i
:i j
falsek p
)p q
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
CustomerLocation $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
name< @
:@ A
$strB U
,U V
typeW [
:[ \
$str] g
,g h
nullablei q
:q r
falses x
)x y
. 

Annotation #
(# $
$str$ 3
,3 4
$str5 >
)> ?
,? @
CustomerPhNum !
=" #
table$ )
.) *
Column* 0
<0 1
long1 5
>5 6
(6 7
name7 ;
:; <
$str= M
,M N
typeO S
:S T
$strU ]
,] ^
nullable_ g
:g h
falsei n
)n o
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 3
,3 4
x5 6
=>7 9
x: ;
.; <

CustomerId< F
)F G
;G H
}   
)   
.!! 

Annotation!! 
(!! 
$str!! +
,!!+ ,
$str!!- 6
)!!6 7
;!!7 8
}"" 	
	protected%% 
override%% 
void%% 
Down%%  $
(%%$ %
MigrationBuilder%%% 5
migrationBuilder%%6 F
)%%F G
{&& 	
migrationBuilder'' 
.'' 
	DropTable'' &
(''& '
name(( 
:(( 
$str(( !
)((! "
;((" #
})) 	
}** 
}++ ã
5D:\Customer\CustomerManagement\Model\CustomerModel.cs
	namespace 	
Customer
 
. 
Data 
{ 
public 

class 
Customer 
{ 
[ 	
Key	 
] 
public		 
int		 
Customer_Id		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
[ 	
Required	 
] 
public 
string 
? 
Customer_Name $
{% &
get' *
;* +
set, /
;/ 0
}1 2
[ 	
Required	 
] 
public 
string 
? 
Customer_Location (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
[ 	
Required	 
] 
public 
long 
Customer_PhNum "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} ß
)D:\Customer\CustomerManagement\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder		 
.		 
Services		 
.		 
AddControllers		 
(		  
)		  !
;		! "
builder

 
.

 
Services

 
.

 #
AddEndpointsApiExplorer

 (
(

( )
)

) *
;

* +
builder 
. 
Services 
. 
AddDbContext 
< 
ApiDbContext *
>* +
(+ ,
options, 3
=>4 6
options7 >
.> ?
UseMySql? G
(G H
builderH O
.O P
ConfigurationP ]
.] ^
GetConnectionString^ q
(q r
$str	r …
)
… †
,
† ‡
new
ˆ ‹ 
MySqlServerVersion
Œ ž
(
ž Ÿ
new
Ÿ ¢
Version
£ ª
(
ª «
)
« ¬
)
¬ ­
)
­ ®
)
® ¯
;
¯ °
builder 
. 
Services 
. 
AddSwaggerGen 
( 
)  
;  !
builder 
. 
Services 
. 
AddCors 
( 
options  
=>! #
{ 
options 
. 
	AddPolicy 
( 
$str +
,+ ,
builder 
=> 
builder 
. 
WithOrigins 
( 
$str 0
)0 1
. 
AllowAnyMethod 
( 
) 
. 
AllowAnyHeader 
( 
) 
) 
; 
} 
) 
; 
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if 
( 
app 
. 
Environment 
. 
IsDevelopment !
(! "
)" #
)# $
{ 
app 
. 

UseSwagger 
( 
) 
; 
app 
. 
UseSwaggerUI 
( 
) 
; 
} 
app!! 
.!! 
UseHttpsRedirection!! 
(!! 
)!! 
;!! 
app## 
.## 
UseCors## 
(## 
$str## !
)##! "
;##" #
app%% 
.%% 
UseAuthorization%% 
(%% 
)%% 
;%% 
app'' 
.'' 
MapControllers'' 
('' 
)'' 
;'' 
app)) 
.)) 
Run)) 
()) 
))) 	
;))	 
í	
)D:\Customer\CustomerManagement\Startup.cs
public 
class 
Startup 
{ 
public 

void 
ConfigureServices !
(! "
IServiceCollection" 4
services5 =
)= >
{ 
services 
. 
AddCors 
( 
options  
=>! #
{		 	
options

 
.

 
	AddPolicy

 
(

 
$str

 3
,

3 4
builder 
=> 
builder "
. 
WithOrigins  
(  !
$str! 8
)8 9
. 
AllowAnyMethod #
(# $
)$ %
. 
AllowAnyHeader #
(# $
)$ %
)% &
;& '
} 	
)	 

;
 
} 
public 

void 
	Configure 
( 
IApplicationBuilder -
app. 1
,1 2
IWebHostEnvironment3 F
envG J
)J K
{ 
app 
. 
UseCors 
( 
$str )
)) *
;* +
} 
} 